# This sets up a single node Kafka cluster together with kafka-ui (localhost:9100).
services:

  kafka0:
    # Note that there's no need for Zookeeper (deprecated in Kafka 3.5.0).
    # Port 9092 - from within the docker container network (host kafka0)
    # Port 2902 - from the host network (host localhost)
    #
    # From spring-boot, use these properties:
    #
    # development profile:
    #   spring.kafka.bootstrap-servers=localhost:29092
    #   spring.kafka.consumer.group-id=myGroup
    #
    # production (docker container) profile:
    #   spring.kafka.bootstrap-servers=kafka0:9092
    #   spring.kafka.consumer.group-id=myGroup
    #
    image: bitnami/kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=listener_internal://:9092,CONTROLLER://:9093,listener_external://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,listener_internal:PLAINTEXT,listener_external:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka0:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=listener_internal://kafka0:9092,listener_external://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=listener_internal

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9100:8080
    depends_on:
      - kafka0
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: demo-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:9092
      
  



